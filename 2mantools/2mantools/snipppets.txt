        string GetSettingsConnection(string path) {
            try {
                return new JsonSearch().FindString(path, "ConnectionStrings/DataStore");
                //var settings = JObject.Parse(File.ReadAllText(path));
                //return (string)settings["ConnectionStrings"]["DataStore"];
            }
            catch {
                return null;
            }
        }

        string MakeShellConnection(string connection) {
            try {
                var fields = connection.Split(';').Select(x => x.Split('=')).ToDictionary(x => x.First().Trim().ToLower(), x => x.Last().Trim());
                return $"--host={fields["server"]} --user={fields["user"]} --password={fields["password"]}" + (fields.ContainsKey("port") ? $" --port={fields["port"]}" : "");
            }
            catch {
                return null;
            }
        }

        string Eval(string line) {
            if (line.Contains("$")) {
                foreach (var key in settings.context.Keys) {
                    var target = "$" + key;
                    if (line.Contains(target)) {
                        line = line.Replace(target, settings.context[key]);
                    }
                }
            }
            return line;
        }

        void DefineSystem() {
            vars = new Dictionary<string, string>();

            // NOTE: more correct way is to get the default project namespace from *.csproj (<RootNamespace>MyWebApp</RootNamespace>),
            // however currently the NET Core scaffolding get it from the the project file/folder name like this:
            vars["$project-name"] = projectDirectory.Replace(@"\", "/").TrimEnd('/').Split('/').Last();
            vars["$database-name"] = vars["$project-name"].Replace("-", "").Replace("_", "").Replace(" ", "").ToLower();

            vars["$project-folder"] = projectDirectory;
            vars["$client-folder"] = Path.Combine(vars["$project-folder"], "ClientApp");
            vars["$source-folder"] = Path.Combine(vars["$client-folder"], "src");
            vars["$app-folder"] = Path.Combine(vars["$source-folder"], "app");

            vars["$config-connection-dev"] = GetSettingsConnection(Path.Combine(projectDirectory, "appsettings.Development.json")) ?? "";
            vars["$config-connection-pub"] = GetSettingsConnection(Path.Combine(projectDirectory, "appsettings.json")) ?? "";
            vars["$shell-connection-dev"] = MakeShellConnection(vars["$config-connection-dev"]) ?? "";
            vars["$shell-connection-pub"] = MakeShellConnection(vars["$config-connection-pub"]) ?? "";
        }
        
